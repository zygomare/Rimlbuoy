{
    "collab_server" : "",
    "contents" : "#' Reads OPTICD file coming from IML Buoy\n#'\n#' The OPTICD file contains OCR data as well as\n#' fluorescence (FDOM and FCHL), GPS, and tilt and heading information.\n#'\n#' @param fname Filename\n#'\n#' @return  It returns a list of fields containing all the data\n#' stored in the OPTICD file. (see example)\n#'\n#' Headers :\n#' DateTime   : Time Format DD-MMM-YYYY HH:MM:SS.ss\n#' DOY        : Counter\n#' lat        : Latitude (North +ve)\n#' lon        : Longitude (East +ve)\n#' waves      : Wavelength standard\n#' Ed0p       : Irradiance for each wavelength\n#' Ed0p.sd    : Standard deviation of irradiance for each wavelength\n#' Lu0.86m    : Radiance for each wavelength\n#' Lu0.86m.sd : Standard deviation of radiance for each wavelength\n#' PAR        : Photosynthetic Active Radiation\n#' PAR.sd     : Standard deviation of Photosynthetic Active Radiation\n#' FCHL       : Fluorescence of Chlorophyl\n#' FCHL.sd    : Standard deviation of Fluorescence of Chlorophyl\n#' FDOM       : Fluorescence of CDOM (Coloured Dissolved Organic Matter)\n#' FDOM.sd    : Standard deviation of Fluorescence of CDOM (Coloured Dissolved Organic Matter)\n#' pitch      : Pitch Angle\n#' pitch.sd   : Standard deviation of Pitch Angle\n#' roll       : Roll Angle\n#' roll.sd    : Standard deviation of Roll Angle\n#' tilt       : Tilt Angle\n#' tilt.sd    : Standard deviation of Tilt Angle\n#' heading    : Heading\n#'\n#' @examples\n#' # read an optical data file from IML Buoy dat file\n#' setwd(path.package(\"Rimlbuoy\"))\n#' raw = read.OPTICD(\"data/IML-4_OPTICD_20160501_000320.DAT\")\n#' str(raw)\n#'\n#'\n#'@author Simon BÃ©langer\n#'\n#'@export read.OPTICD\n#'\n\n\n\nread.OPTICD <- function(filen) {\n\n  con=file(filen,encoding=\"latin1\")\n  data=readLines(con)\n  close(con)\n\n  nrec = length(data)\n  tmp=unlist(strsplit(data, \",\"))\n  tmp.mat = as.data.frame(matrix(tmp, ncol=47, nrow=nrec, byrow=T))\n\n  DateTime = as.POSIXct(paste(tmp.mat$V1, tmp.mat$V2), format=\"%Y/%m/%d %H:%M:%S\", tz=\"GMT\")\n  DOY = as.numeric(levels(tmp.mat$V3)[tmp.mat$V3])\n\n  # Extract Lat and Lon\n  if (levels(tmp.mat$V4) == \"########\") {\n    lat = rep(NA, nrec)\n    lon =  rep(NA, nrec)\n  } else {\n    lat = convert_str_coord(levels(tmp.mat$V4)[tmp.mat$V4])\n    lon = convert_str_coord(levels(tmp.mat$V5)[tmp.mat$V5])\n  }\n\n\n\n\n  BioShutter = tmp.mat$V47\n\n  tmp=sapply(tmp.mat[,6:46], function(x) as.numeric(as.character(x)))\n\n  Ed0p = (tmp[,c(1,3,5,7,9,11, 13)])\n  Ed0p.sd = tmp[,c(2,4,6,8,10,12,14)]\n  colnames(Ed0p) <- c(\"412\",\"443\",\"490\",\"510\",\"555\",\"669\", \"683\")\n  colnames(Ed0p.sd) <- c(\"412\",\"443\",\"490\",\"510\",\"555\",\"669\", \"683\")\n\n  Lu = tmp[,c(15,17,19,21,23,25,27)]\n  Lu.sd = tmp[,c(16,18,20,22,24,26,28)]\n  colnames(Lu) <- c(\"412\",\"443\",\"490\",\"510\",\"555\",\"669\", \"683\")\n  colnames(Lu.sd) <- c(\"412\",\"443\",\"490\",\"510\",\"555\",\"669\", \"683\")\n\n  PAR = tmp[,29]\n  PAR.sd = tmp[,30]\n\n  FCHL = tmp[,31]\n  FCHL.sd = tmp[,32]\n\n  FDOM = tmp[,33]\n  FDOM.sd = tmp[,34]\n\n  heading = tmp[,35]\n\n  pitch = tmp[,36]\n  pitch.sd = tmp[,37]\n\n  roll = tmp[,38]\n  roll.sd = tmp[,39]\n\n  tilt = tmp[,40]\n  tilt.sd = tmp[,41]\n\n  return(list(DateTime=DateTime, DOY=DOY, lat=lat,lon=lon,\n              waves = c(412,443,490,510,555,669, 683),\n              Ed0p=Ed0p,Ed0p.sd=Ed0p.sd,\n              Lu0.86m=Lu, Lu0.86m.sd=Lu.sd,\n              PAR=PAR, PAR.sd=PAR.sd,\n              FCHL=FCHL, FCHL.sd=FCHL.sd,\n              FDOM=FDOM, FDOM.sd=FDOM.sd,\n              pitch=pitch, pitch.sd=pitch.sd,\n              roll=roll, roll.sd=roll.sd,\n              tilt=tilt, tilt.sd=tilt.sd,\n              heading=heading))\n\n  }\n",
    "created" : 1477402749122.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "683905956",
    "id" : "9A065F00",
    "lastKnownWriteTime" : 1475259062,
    "last_content_update" : 1475259062,
    "path" : "~/MEGA/Rimlbuoy/R/read.OPTICD.R",
    "project_path" : "R/read.OPTICD.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}