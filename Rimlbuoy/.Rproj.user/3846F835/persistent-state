build-last-errors="[]"
build-last-errors-base-dir="~/MEGA/Rimlbuoy/"
build-last-outputs="[{\"output\":\"==> R CMD INSTALL --no-multiarch --with-keep.source Rimlbuoy\\n\\n\",\"type\":0},{\"output\":\"* installing to library ‘/home/thomas/R/x86_64-redhat-linux-gnu-library/3.3’\\n\",\"type\":1},{\"output\":\"* installing *source* package ‘Rimlbuoy’ ...\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"Warning in .write_description(db, file.path(outDir, \\\"DESCRIPTION\\\")) :\\n\",\"type\":1},{\"output\":\"  Encodage inconnu avec des donn?es non-ASCII : conversion vers ASCII\\n\",\"type\":1},{\"output\":\"** R\\n\",\"type\":1},{\"output\":\"** data\\n\",\"type\":1},{\"output\":\"*** moving datasets to lazyload DB\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"** preparing package for lazy loading\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\\n\",\"type\":1},{\"output\":\"TO BEGIN A PROCESSING AND PRODUCE WINDOWS PLOTS, TYPE : cops.go()\\n\",\"type\":1},{\"output\":\"TO BEGIN A PROCESSING AND PRODUCE   PDF   PLOTS,     TYPE : cops.go(interactive = FALSE)\\n\",\"type\":1},{\"output\":\"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\\n\",\"type\":1},{\"output\":\"TO BEGIN A PROCESSING, \\n\",\"type\":1},{\"output\":\"1. Create an ASCII file named directories.for.IOPs.dat \\n\",\"type\":1},{\"output\":\"   in which the full path of the folder(s) containing the IOPs raw data to process\\n\",\"type\":1},{\"output\":\"2. Type IOPs.go(report=FALSE)\\n\",\"type\":1},{\"output\":\"3. Edit the files cast.info.dat, cal.info.dat and instrument.dat to provide  \\n\",\"type\":1},{\"output\":\"   the adequate parameters for the processing (see header of copied cast.info.dat, cal.info.dat) \\n\",\"type\":1},{\"output\":\"   (e.g. lat, lon, cast number, calibration file, blank, depth and smoothing intervals, etc) \\n\",\"type\":1},{\"output\":\"4. Type again IOPs.go(report=TRUE)\\n\",\"type\":1},{\"output\":\"5. Look at the IOPs.plot.pdf \\n\",\"type\":1},{\"output\":\"WARNING: user will be prompted to synchronized the data form different instruments\\n\",\"type\":2},{\"output\":\"This is due to the fact that instrument's clock are never perfectly synchronized\\n\",\"type\":1},{\"output\":\"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"** help\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"*** installing help indices\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"  converting help for package ‘Rimlbuoy’\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"    finding HTML links ...\",\"type\":1},{\"output\":\"    METOCE.merge                            html  \\n\",\"type\":1},{\"output\":\"    OPTICD.merge                            html  \\n\",\"type\":1},{\"output\":\"    compute.Rrs.from.buoy                   html  \\n\",\"type\":1},{\"output\":\"    convert_str_coord                       html  \\n\",\"type\":1},{\"output\":\"    get.bandshift.coefficient               html  \",\"type\":1},{\"output\":\" fini\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"\\n\",\"type\":1},{\"output\":\"    read.METOCE                             html  \\n\",\"type\":1},{\"output\":\"    read.OCR3                               html  \\n\",\"type\":1},{\"output\":\"    read.OCR_MED                            html  \\n\",\"type\":1},{\"output\":\"    read.OGSL.OPTICD                        html  \\n\",\"type\":1},{\"output\":\"    read.OPTICD                             html  \\n\",\"type\":1},{\"output\":\"    read.PAR_DIGI                           html  \",\"type\":1},{\"output\":\"\\n\",\"type\":1},{\"output\":\"    read.SD                                 html  \\n\",\"type\":1},{\"output\":\"    write.to.MERMAID                        html  \\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"** building package indices\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"** testing if installed package can be loaded\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\\n\",\"type\":1},{\"output\":\"TO BEGIN A PROCESSING AND PRODUCE WINDOWS PLOTS, TYPE : cops.go()\\n\",\"type\":1},{\"output\":\"TO BEGIN A PROCESSING AND PRODUCE   PDF   PLOTS,     TYPE : cops.go(interactive = FALSE)\\n\",\"type\":1},{\"output\":\"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\\n\",\"type\":1},{\"output\":\"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\\n\",\"type\":1},{\"output\":\"TO BEGIN A PROCESSING, \\n\",\"type\":1},{\"output\":\"1. Create an ASCII file named directories.for.IOPs.dat \\n\",\"type\":1},{\"output\":\"   in which the full path of the folder(s) containing the IOPs raw data to process\\n\",\"type\":1},{\"output\":\"2. Type IOPs.go(report=FALSE)\\n\",\"type\":1},{\"output\":\"3. Edit the files cast.info.dat, cal.info.dat and instrument.dat to provide  \\n\",\"type\":1},{\"output\":\"   the adequate parameters for the processing (see header of copied cast.info.dat, cal.info.dat) \\n\",\"type\":1},{\"output\":\"   (e.g. lat, lon, cast number, calibration file, blank, depth and smoothing intervals, etc) \\n\",\"type\":1},{\"output\":\"4. Type again IOPs.go(report=TRUE)\\n\",\"type\":1},{\"output\":\"5. Look at the IOPs.plot.pdf \\n\",\"type\":1},{\"output\":\"WARNING: user will be prompted to synchronized the data form different instruments\\n\",\"type\":2},{\"output\":\"This is due to the fact that instrument's clock are never perfectly synchronized\\n\",\"type\":1},{\"output\":\"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"* DONE (Rimlbuoy)\\n\",\"type\":1},{\"output\":\"\",\"type\":1}]"
compile_pdf_state="{\"errors\":[],\"output\":\"\",\"running\":false,\"tab_visible\":false,\"target_file\":\"\"}"
console_procs="[]"
files.monitored-path=""
find-in-files-state="{\"handle\":\"\",\"input\":\"\",\"path\":\"\",\"regex\":true,\"results\":{\"file\":[],\"line\":[],\"lineValue\":[],\"matchOff\":[],\"matchOn\":[]},\"running\":false}"
imageDirtyState="1"
saveActionState="-1"
